<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFgX+hYV1f/WFdX/1hXV/9YV1f/WFdX/1hX
        V/9YV1f/YWBf6AAAAAAAAAAAYWBf6FhXV/9YV1f/WFdX/1hXV/9YV1f/WFdX/1hXV/9hYF/oAAAAAAAA
        AABhYF/oWFdX/1hXV/9YV1f/WFdX/1hXV/9YV1f/WFdX/2FgX+gAAAAAY2Jh/6CgoP+SkpL/kpKS/5KS
        kv+SkpL/kpKS/6CgoP9jYmH/AAAAAAAAAABjYmH/oKCg/5KSkv+SkpL/kpKS/5KSkv+SkpL/oKCg/2Ni
        Yf8AAAAAAAAAAGNiYf+goKD/kpKS/5KSkv+SkpL/kpKS/5KSkv+goKD/Y2Jh/wAAAABubWz/rKys/29v
        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
        B///wAf//8AH///AB///wAf///////////8=
</value>
  </data>
</root>